version: "3.8"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DEBUG: '${DEBUG}'
      SECRET_KEY: '${SECRET_KEY}'
      CELERY_BROKER: '${CELERY_BROKER}'
      CELERY_RESULT_BACKEND: '${CELERY_RESULT_BACKEND}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: '${POSTGRES_PORT}'
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py makemigrations 
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "80:8000"
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    hostname: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    hostname: redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DEBUG: '${DEBUG}'
      SECRET_KEY: '${SECRET_KEY}'
      CELERY_BROKER: '${CELERY_BROKER}'
      CELERY_RESULT_BACKEND: '${CELERY_RESULT_BACKEND}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: '${POSTGRES_PORT}'
    command: celery -A hospital_management worker -l info
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DEBUG: '${DEBUG}'
      SECRET_KEY: '${SECRET_KEY}'
      CELERY_BROKER: '${CELERY_BROKER}'
      CELERY_RESULT_BACKEND: '${CELERY_RESULT_BACKEND}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: '${POSTGRES_PORT}'
    command: celery -A hospital_management beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis

volumes:
  postgres_data: